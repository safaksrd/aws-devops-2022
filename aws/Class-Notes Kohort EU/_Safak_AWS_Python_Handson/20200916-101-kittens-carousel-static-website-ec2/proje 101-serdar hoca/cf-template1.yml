AWSTemplateFormatVersion: 2010-09-09

Description: > # > ya da | ile altsatira gecip aciklama yapilabilir
  CloudFormation Template for Kittens Carousel Static Website on EC2.
  This template deploys Kittens Carousel Static Website on Amazon Linux 2
  (ami-09d95fab7fff3776c) EC2 Instance with custom security group 
  allowing http connections on port 80. Kittens Carousel Static Website 
  is downloaded from Github repository, then deployed on Apache Web Server.

Resources:
  LeonsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for Apache Web Server and SSH for Terminal
      SecurityGroupIngress: # Security Group lar statefuldur, inbound ayarini outbound kabul eder. 
                            # Ama VPC ler statelessdir, dolayisiyla inbound ve outbound ayri ayri ayarlanir. 
                            # Burada SecurityGroupEngress kismini sildik.
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  WebServerHost:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ed9277fb7eb570c9
      InstanceType: t2.micro
      KeyName: leon
      # Launch Template de kullanabilirdik ama sildik, Launch Template kullansaydik, 
      # Cloud Formation ile farkli bir ozellik belirledigimizde Cloud Formationun onceligi vardir. 
      # Ornegin Launch Template de InstanceType m2.large ama CloudFormation da t2.micro dedik. 
      # Bu durumda InstanceType t2.micro olur.
      SecurityGroupIds:
        - !Ref LeonsSecurityGroup # !Ref instrict function ile yukaridaki Sec Group u refere ediyoruz
      Tags:                
        -                        
          Key: Name
          Value: !Sub Web Server of ${AWS::StackName} Stack # !Sub function ile AWS konsolunda Stack e verilen ismi EC2 Instance a atiyor. 
                                                            # Olusan EC2 Instance Stack ismi ile olusuyor 
      UserData:
        Fn::Base64: # bu function ile userdatayi cekiyoruz
          !Sub |
            #! /bin/bash
            yum update -y
            yum install httpd -y
            cd /var/www/html/
            wget https://raw.githubusercontent.com/safaksrd/aws-devops-2022/main/aws/Class-Notes%20Kohort%20EU/_Safak_AWS_Python_Handson/20200916-101-kittens-carousel-static-website-ec2/proje%20101-serdar%20hoca/static-web/index.html
            wget https://raw.githubusercontent.com/safaksrd/aws-devops-2022/main/aws/Class-Notes%20Kohort%20EU/_Safak_AWS_Python_Handson/20200916-101-kittens-carousel-static-website-ec2/proje%20101-serdar%20hoca/static-web/cat0.jpg
            wget https://raw.githubusercontent.com/safaksrd/aws-devops-2022/main/aws/Class-Notes%20Kohort%20EU/_Safak_AWS_Python_Handson/20200916-101-kittens-carousel-static-website-ec2/proje%20101-serdar%20hoca/static-web/cat1.jpg
            wget https://raw.githubusercontent.com/safaksrd/aws-devops-2022/main/aws/Class-Notes%20Kohort%20EU/_Safak_AWS_Python_Handson/20200916-101-kittens-carousel-static-website-ec2/proje%20101-serdar%20hoca/static-web/cat2.jpg
            systemctl start httpd
            systemctl enable httpd
Outputs:
  WebsiteURL: # Alacagimiz output un ismi, istedigimiz ismi verebiliriz
    Value: !Sub 
      - http://${PublicAddress} # PublicAddress i alt satirdan cekiyor
      - PublicAddress: !GetAtt WebServerHost.PublicDnsName # Her olusan EC2 nun farkli Attributelari var, 
                                                           # bunlari cekmek icin !GetAtt kullanilir.
                                                           # Burada DNS Name Attribute unu kullaniyoruz
    Description: Kittens Carousel Application URL
