AWSTemplateFormatVersion: 2010-09-09

# Template i yazarken konuya iliskin hangi resource lari olusturacagimiza hakim olmaliyiz. 
# Ornegin AWS konsolundan Launch Configuration ile ASG li bir ALB mimarisi olustururken menülerde neleri sectigimizi hatirlamaliyiz
# Bu hatirladiklarimizi Template a nasil yazacagimiza AWS Documentation sayfasinda Cloud Formation User Guide bölümünden (gerektiginde alt bölümlere girerek) bakiyoruz.
# VSCode daki CloudFormation eklentisi sayesinde maouse un üzerinde olan bölümün AWS Documentation linki görünüyor.
# Ornegin konsolda VpcId seciyorduk. Bunu Template e girmek icin Template in ilgili bölümünde VpcId yazarsak, VSCode eklentisi VpcId yi getirir
# Gelen bilgiler arasinda bize lazim olanlari Documentation daki yönlendirmelere gore düzenleriz.
# Burada önemli olan AWS konsoluna ve resource lara hakimiyet. Örnegin AWS de ClassicLoadBalancer v1, ElasticLoadBalancer v2 diye geciyor.
# Template olustururken VSCode eklentisi LoadBalancer icin her ikisini de gosterir, v2 yi secmemiz gerektigini hatirlamaliyiz.

Description: |
  CloudFormation Template for Apache Web Server was created with Launch Configuration, 
  Auto Scaling Group, Application Load Blaancer and Target Group on EC2.
  This template deploys Apache Web Server on Amazon Linux 2 Instance which runs
  in predetermined regions.  EC2 Instance with custom security group 
  allowing http connections on port 80. 


Parameters:
  
  VpcId:
    Type: AWS::EC2::VPC::Id # Sag tarafinda asagiya ok tusu ile user tarafindan secilecek formatta gelir
    Description: VpcId of your existing Virtual Private Cloud (VPC) # AWS konsolunda gorunen aciklama
  
  Subnets:
    Type: List<AWS::EC2::Subnet::Id> # Sag tarafinda asagiya ok tusu ile user tarafindan LISTEDEN secilecek formatta gelir. List formatinda olmasa hepsini birden degil sadece birini secebilirdik
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC) # AWS konsolunda gorunen aciklama
  
  InstanceType:
    Description: WebServer EC2 instance type # AWS konsolunda gorunen aciklama
    Type: String 
    Default: t2.micro # Default deger olarak bu gelir. Sag tarafinda asagiya ok tusu ile AllowedValues listesi acilir. User tarafindan secilir.
    AllowedValues:
      - t2.micro
      - t1.micro
      - m1.small
      - m1.medium
      - m1.large
    ConstraintDescription: must be a valid EC2 instance type. # uyari 
  
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances # AWS konsolunda gorunen aciklama
    Type: AWS::EC2::KeyPair::KeyName # Sag tarafinda asagiya ok tusu ile user tarafindan secilecek formatta gelir. Bu mantikli cünkü String olarak birakirsak KeyName i elle girmemiz gerekir, hata yapabiliriz. 
                                     # Bu formatta girince ilgili Region da kullanilan KeyPair leri getiriyor 
  
  PolicyTargetValue:
    Description: Please enter your Target value that triggers the Autoscaling # AWS konsolunda gorunen aciklama
    Default: '60'
    Type: String
  

Mappings:
  
  RegionImageMap:
    us-east-1:
      AMI: ami-0c94855ba95c71c99
    us-east-2:
      AMI: ami-0603cbe34fd08cb81
    us-west-1:
      AMI: ami-0e65ed16c9bf1abc7
    us-west-2:
      AMI: ami-0841edc20334f9287
    eu-west-1:
      AMI: ami-08a2aed6e0a6f9c7d


Resources:
 
  myAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs 
      LaunchConfigurationName: !Ref myLaunchConfig # Asagida tanimli Launch Config e refere ediyoruz
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      MinSize: '1'
      MaxSize: '3'
      TargetGroupARNs:
        - !Ref myALBTargetGroup # Asagida tanimli Target Group a refere ediyoruz
  
  myLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: !Ref KeyName
      ImageId: !FindInMap # FindInMap ile Mappings bölümünde RegionMap i bulur, 
                          # !Ref "AWS::Region" kismi icin us-east-1, us-east-2, us-west-1, us-west-2, eu-west-1 regionlarindan hangisinde o an calisiyorsak onu belirler. 
                          # O Region daki AMI degiskeninine tanimli ami degerini alir, buoylelikle hangi ami nin kullanilacagi belirlenir.
        - RegionImageMap
        - !Ref AWS::Region
        - AMI
      UserData: !Base64 |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
          DATE_TIME=`date`
          chmod -R 777 /var/www/html
          echo "<html>
          <head>
              <title> Congratulations! You have created an instance from Launch Template</title>
          </head>
          <body>
              <h1>This web server is launched from launch configuration by SAFAK</h1>
              <p>This instance is created at <b>$DATE_TIME</b></p>
              <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
              <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
          </body>
          </html>" > /var/www/html/index.html
          systemctl start httpd
          systemctl enable httpd
      SecurityGroups:
        - !Ref mySecurityGroup
      InstanceType: !Ref InstanceType # Parameters bölümünde tanimlanan Instance Type a refere ediyoruz.
  
  myCPUPolicy: # ASG icin olusturuluyor, Yukarida tanimlanan ASG ye refere ediliyor
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: !Ref myAutoScalingGroup # Yukarida tanimli myAutoScalingGroup a refere ediyoruz.
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: !Ref PolicyTargetValue # Parameters bölümünde tanimlanan PolicyTargetValue ya refere ediyoruz.
  
  myApplicationLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      SecurityGroups:
        - !GetAtt mySecurityGroup.GroupId # Olusturulan securitygroup un GroupId sini GetAtt ile cekiyoruz
      Subnets: !Ref Subnets # Parameters bölümünde tanimlanan Subnets e refere ediyoruz
       
  myALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions: 
        - Type: forward # redirect http yi https ye yonlendirmek icin kullanilir, simdilik direk forward edecegiz
          TargetGroupArn: !Ref myALBTargetGroup #asagida olusturulan myALBTargetGroup u burada refere ediyoruz
      LoadBalancerArn: !Ref myApplicationLoadBalancer # Arn Amazon Resource Name demek. Yukarida olusturulan myApplicationloadbalancer i burada refere ediyoruz
      Port: 80
      Protocol: HTTP
  
  myALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 25
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 3
      VpcId: !Ref VpcId # Parameters bölümünde tanimlanan VpcId ye ediyoruz.
  
  mySecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enables SSH and HTTP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  

Outputs:
  URL:
    Description: The URL of the website # AWS konsolunda gorunen aciklama
    Value: !Join # Join fonksiyonu ile bir bosluk ve sonrasinda http:// ve DNSName i birlestiriyoruz. Output kisminda bu skeilde yanyana gorunecek
      - ''
      - - 'http://'
        - !GetAtt myApplicationLoadBalancer.DNSName # Olusturulan ALB nin DNSName ini GetAtt ile cekiyoruz. 
