AWSTemplateFormatVersion: 2010-09-09
Description: |
  Cloudformation template for milliseconds converter application. This app runs on application load balancer. In addition, it is observed by Autoscaling Group
  
Resources:
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for App from ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId
# 80 portu icin Source Sec Group Id tanimladik. Disaridan web sayfasini talep eden User once ALB nin DNS ine ulasacak, ALB den gelen istekler, EC2 instance lara ulasabilecek, yani EC2 instance icindeki app.py yi calistiracak . ALB EC2 lari cepecevree saracak.

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  
  WebServerLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData: 
        ImageId: ami-033b95fb8079dc481
        InstanceType: t2.micro
        KeyName: leon
        SecurityGroupIds: 
          - !GetAtt WebServerSecurityGroup.GroupId
        TagSpecifications:
          - ResourceType: instance # olusacak EC2 instance larin adlarini belirliyoruz
            Tags:
              - Key: Name
                Value: !Sub Web Server of ${AWS::StackName} 
        UserData: 
          Fn::Base64:
            !Sub |
              #! /bin/bash
              yum update -y
              yum install python3 -y
              pip3 install flask
              TOKEN="xxxxxxxx"
              FOLDER="https://$TOKEN@raw.githubusercontent.com/safaksrd/aws-devops-2022/main/aws/Class-Notes-Kohort-EU/Safak_Notes/20201014-002-milliseconds-converter/proje-002/"
              curl -s --create-dirs -o "/home/ec2-user/templates/index.html" -L "$FOLDER"templates/index.html
              curl -s --create-dirs -o "/home/ec2-user/templates/result.html" -L "$FOLDER"templates/result.html
              curl -s --create-dirs -o "/home/ec2-user/app.py" -L "$FOLDER"app.py
              python3 /home/ec2-user/app.py

  WebServerTG:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId: !GetAtt WebServerSecurityGroup.VpcId

  ApplicationLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt ALBSecurityGroup.GroupId
      Subnets:
        - subnet-09c7b169bc3091295
        - subnet-066a874056a5249be
        - subnet-01c2a24554b2ed1bd
        - subnet-00aee72d56623669d
        - subnet-0440277dd2320c599
        - subnet-0afa176de4f1e6d5b
      Type: application

# subnet ler regiona gore girilmeli

  ALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions: #required
        - TargetGroupArn: !Ref WebServerTG
          Type: forward # neden?
      LoadBalancerArn: !Ref ApplicationLoadBalancer #required
      Port: 80 #required
      Protocol: HTTP #required

  WebServerASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AvailabilityZones:
        !GetAZs "" # t√ºm AZ leri almasi icin
      DesiredCapacity: 2
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate: 
        LaunchTemplateId: !Ref WebServerLT
        Version: !GetAtt WebServerLT.LatestVersionNumber
      MaxSize: 3 #required
      MinSize: 1 #required
      TargetGroupARNs:
        - !Ref WebServerTG
    

Outputs:
  WebsiteURL:
    Description: Milliseconds Converter Application Load Balancer URL
    Value: !Sub 
      - http://${ALBaddress}
      - ALBaddress: !GetAtt ApplicationLoadBalancer.DNSName