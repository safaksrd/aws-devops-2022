version: "3.7"

services:
  database:
    image: mysql:5.7
    environment: # environment variables tanimliyoruz
      MYSQL_ROOT_PASSWORD: P123456p # olmazsa olmaz
      MYSQL_DATABASE: phonebook_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: Clarusway_1
    volumes:
      - db-data:/var/lib/mysql # volume mapping isleminde eger sol taraftaki adresi herhangi bir node un icini gosterirsek node kapandiginda bilgi kaybolur, swarm bu tip durumlarla karsilasmayalim diye named volume kullanimini tavsiye ediyor, sol tarafa isim verin ben onu cluster icinde bulurum demis, dolayisiyla db-data dedik
    networks:
      - clarusnet
    configs:
      - source: initialdatabase
        target: /docker-entrypoint-initdb.d/init.sql # mysql direktifi: baslangicta bir db init etmek istiyorsak bunu yazmaliyiz. Swarm mimarisinde mqsql in hangi node da ayaga kalkacagi belli olmadigi icin db init etmek icin genel bir adreslemeyi bu sekilde yapariz

  app-server:
    #image: 046402772087.dkr.ecr.us-east-1.amazonaws.com/clarusway-repo/phonebook-app:latest
    image: "${ECR_REGISTRY}/${APP_REPO_NAME}:latest" # ECR_REGISTRY ve APP_REPO_NAME bilgisini ayni dizinde .env isimli bir dosyada tanimlarsak ordan ceker alir
    deploy:
      mode: global # default deger replicated dir. Swarm load balancer yaparak servisleri dagitir. her node da kesin kurulmasini istedigimiz bir servisi global tanimlariz
      update_config: # konteynirin hangi kurallara gore update edilecegini belirtiriz. 
        parallelism: 2 # ikiser ikiser öldürür ve yerine yenisini kaldirir
        delay: 5s # öldürmeler arasinda 5 saniye bekler
        order: start-first # once olusani once update et
    ports:
      - "80:80"
    networks:
      - clarusnet

networks:
  clarusnet:
    driver: overlay # cluster icin ortak network

volumes:
  db-data:

configs:
  initialdatabase:
      file: ./init.sql #grand master in lokalindeki bu init dosyasini yukarida configs/target bölümünde belirledigimiz adrese koyuyoruz
